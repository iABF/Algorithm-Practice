#include<iostream>
#include<cstdio>
#include<string>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<queue>
#include<map>
#define INF 0x7fffffff
#define MAXN 30020
#define _PI 3.14159265358979323846
using namespace std;
int n, ans = 0;
string s[45], beg;
bool vis[45] = { false };
int check(string x, string y) {
	int l = min(x.length(), y.length());
	for (int i = 1; i <= l; i++) {
		if (x.substr(x.length() - i) == y.substr(0, i))return i;
	}
	return 0;
}
void dfs(int dep, string from) {
	ans = max(ans, (int)from.length());
	if (dep == n) return;
	for (int i = 0; i < n; i++) {
		if (!vis[i]) {
			int col;
			if (col = check(from, s[i])) {
				vis[i] = true;
				dfs(dep + 1, from.substr(0, from.length() - col) + s[i]);
				vis[i] = false;
			}
		}
	}
}
void start() {
	for (int i = 0; i < n; i++) {
		if (s[i][0] == beg[0]) {
			vis[i] = true;
			dfs(1, s[i]);
		}
	}
}
int main()
{
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> s[i];
		s[i + n] = s[i];
	}
	n *= 2;
	cin >> beg;
	start();
	cout << ans << endl;
} 
#include<iostream>
#include<cstdio>
#include<string>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<utility>
#include<queue>
#include<map>
#define INF 0x7fffffff
#define MAXN 30020
#define _PI 3.14159265358979323846
using namespace std;
int n, sum;
int C[13][13];
int f[15] = { 0 };
bool end_count = false;
bool vis[15] = { false };
void dfs(int cur, int ans) {
	if (end_count)return;
	if (cur == n + 1) {
		if (sum == ans) {
			for (int i = 1; i <= n; i++)cout << f[i] << ' ';
			cout << endl;
			end_count = true;
		}
	}
	for (int i = 1; i <= n; i++) {
		if (!vis[i]) {
			if (ans + i * C[n - 1][cur - 1] <= sum) {
				vis[i] = true;
				f[cur] = i;
				dfs(cur + 1, ans + i * C[n - 1][cur - 1]);
				vis[i] = false;
			}
		}
	}
}
int main()
{
	cin >> n >> sum;
	for (int i = 0; i <= 12; i++)C[0][i] = 1;
	for (int i = 1; i <= 12; i++) {
		C[i][0] = C[i][i] = 1;
		for (int j = 1; j < i; j++) {
			C[i][j] = (i - j + 1)*C[i][j - 1] / j;
		}
	}
	dfs(1, 0);
}

#include<iostream>
#include<cstdio>
#include<string>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<utility>
#include<queue>
#include<map>
#define INF 0x7fffffff
#define MAXN 30020
#define _PI 3.14159265358979323846
using namespace std;
int n, m;
int mp[105][105];
int ans = 0;
int e = 0;
int dir[4][2] = { 0,1,0,-1,-1,0,1,0 };
int fll[105][105] = { 0 };
bool vis[105][105] = { false };
void dfs(int x, int y, int l) {
	if (fll[x][y]) {
		ans = max(ans, l + fll[x][y] - 1);
		return;
	}
	vis[x][y] = true;
	ans = max(ans, l);
	if (ans == n * m)return;
	for (int i = 0; i < 4; i++) {
		int nx = x + dir[i][0];
		int ny = y + dir[i][1];
		if (nx <= n && nx >= 1 && ny <= m && ny >= 1) {
			if (!vis[nx][ny] && mp[nx][ny] < mp[x][y]) {
				dfs(nx, ny, l + 1);
				vis[nx][ny] = false;
			}
		}
	}
}
int main()
{
	cin >> n >> m;
	for (int i = 1; i <= n; i++)for (int j = 1; j <= m; j++)cin >> mp[i][j];
	for (int i = 1; i <= n; i++)for (int j = 1; j <= m; j++) {
		memset(vis, false, sizeof(vis));
		ans = 0;
		dfs(i, j, 1);
		fll[i][j] = ans;
		e = max(e, ans);
	}
	cout << e << endl;
}

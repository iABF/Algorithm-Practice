#include<bits/stdc++.h>

#define INF 99999999
#define _PI 3.14159265358979323846
using namespace std;
int n, m;
int mem[1505][1505][2];
bool vis[1505][1505];
char mp[1505][1505];
int dir[4][2] = {0, 1, 0, -1, 1, 0, -1, 0};
int st, ed;
bool ans;

void dfs(int x, int y, int rr, int tt) {
    if (ans)return;
    for (int i = 0; i < 4; i++) {
        int r = rr;
        int t = tt;
        int nx = x + dir[i][0];
        int ny = y + dir[i][1];
        if (nx < 0)nx = n - 1, r--;
        else if (ny < 0)ny = m - 1, t--;
        else if (nx >= n)nx = 0, r++;
        else if (ny >= m)ny = 0, t++;
        if (mp[nx][ny] == '#')continue;
        if (!vis[nx][ny]) {
            vis[nx][ny] = true;
            mem[nx][ny][0] = r;
            mem[nx][ny][1] = t;
            dfs(nx, ny, r, t);
            if (ans)return;
        } else {
            if (mem[nx][ny][0] != r || mem[nx][ny][1] != t) {
                ans = true;
                return;
            }
            continue;
        }
    }
}

int main() {
    while (cin >> n >> m) {
        string s;
        for (int i = 0; i < n; i++) {
            cin >> s;
            for (int j = 0; j < m; j++) {
                mp[i][j] = s[j];
                if (s[j] == 'S')st = i, ed = j;
            }
        }
        memset(mem, 0, sizeof(mem));
        memset(vis, false, sizeof(vis));
        ans = false;
        vis[st][ed] = true;
        mem[st][ed][0] = 1;
        mem[st][ed][1] = 1;
        dfs(st, ed, 1, 1);
        if (ans)cout << "Yes\n";
        else cout << "No\n";
    }
}

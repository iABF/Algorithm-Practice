#include <bits/stdc++.h>

#define INF 0x7f7f7f7f
#define MAXN 20005
#define MAXM 100005
#define MOD 1000000007
#define BASE 131
#define _PI 3.14159265358979323846
#define ll long long
#define VPRINT(a, n) for(int i = 0; i < n - 1; ++i) cout << a[i] <<' '; cout << a[n - 1] << endl
#define PRINT(a) cout << a << endl
using namespace std;

int n, m;
int f[MAXN], enemy[MAXN] = {0};
struct Conflict {
    int l, r, value;
} c[MAXM];

bool cmp(const Conflict &x, const Conflict &y) {
    return x.value > y.value;
}

int find(int x) {
    return x == f[x] ? x : f[x] = find(f[x]);
}

void merge(int x, int y) {
    f[find(x)] = find(y);
}


int main() {
    cin >> n >> m;
    for (int i = 0; i < m; ++i)cin >> c[i].l >> c[i].r >> c[i].value;
    for (int i = 1; i <= n; ++i)f[i] = i;
    sort(c, c + m, cmp);
    for (int i = 0; i < m; ++i) {
        if (find(c[i].l) != find(c[i].r)) {
            if (enemy[c[i].l])merge(enemy[c[i].l], c[i].r);
            else enemy[c[i].l] = c[i].r;
            if (enemy[c[i].r])merge(enemy[c[i].r], c[i].l);
            else enemy[c[i].r] = c[i].l;
        } else {
            cout << c[i].value << endl;
            return 0;
        }
    }
    cout << 0 << endl;
}

#include<stdio.h>
#include<Windows.h>
#include<string.h>
void print(char (*p)[3])
{
	printf("|%c%3c%3c|\n|%c%3c%3c|\n|%c%3c%3c|\n", p[0][0], p[0][1], p[0][2], p[1][0], p[1][1], p[1][2], p[2][0], p[2][1], p[2][2]);
}
char checkwinner(char(*p)[3])
{
	if ((p[0][0] == 'X' && p[1][0] == 'X' && p[2][0] == 'X') || (p[0][1] == 'X' && p[1][1] == 'X' && p[2][1] == 'X') || (p[0][2] == 'X' && p[1][2] == 'X' && p[2][2] == 'X') || (p[0][0] == 'X'&& p[0][1] == 'X'&& p[0][2] == 'X') || (p[1][0] == 'X'&& p[1][1] == 'X'&& p[1][2] == 'X') || (p[2][0] == 'X'&& p[2][1] == 'X'&& p[2][2] == 'X') || (p[0][0] == 'X'&& p[1][1] == 'X'&& p[2][2] == 'X') || (p[0][2] == 'X'&& p[1][1] == 'X'&& p[2][0] == 'X'))
	{
		return('X');
	}
	else if ((p[0][0] == 'O' && p[1][0] == 'O' && p[2][0] == 'O') || (p[0][1] == 'O' && p[1][1] == 'O' && p[2][1] == 'O') || (p[0][2] == 'O' && p[1][2] == 'O' && p[2][2] == 'O') || (p[0][0] == 'O'&& p[0][1] == 'O'&& p[0][2] == 'O') || (p[1][0] == 'O'&& p[1][1] == 'O'&& p[1][2] == 'O') || (p[2][0] == 'O'&& p[2][1] == 'O'&& p[2][2] == 'O') || (p[0][0] == 'O'&& p[1][1] == 'O'&& p[2][2] == 'O') || (p[0][2] == 'O'&& p[1][1] == 'O'&& p[2][0] == 'O'))
	{
		return('O');
	}
	else if (!(p[0][0] == '\0' || p[0][1] == '\0' || p[0][2] == '\0' || p[1][0] == '\0' || p[1][1] == '\0' || p[1][2] == '\0' || p[2][0] == '\0' || p[2][1] == '\0' || p[2][2] == '\0'))
	{
		return('D');
	}
	else return NULL;
}
void X_turn(char(*p)[3])
{
	void O_turn(char(*p)[3]);
begin:int point;
	printf("X next, please input number 1~9 to continue:");
	scanf("%d", &point);
	if (point <= 9 && point >= 1 && p[2 - (point - 1) / 3][(point - 1) % 3] == '\0')
	{
		p[2 - (point - 1) / 3][(point - 1) % 3] = 'X';
		print(p);
		char c = checkwinner(p);
		if (c == 'X') { printf("Winner is X.\n"); return; }
		else if (c == 'O') { printf("Winner is O.\n"); return; }
		else if (c == 'D') { printf("Draw.\n"); return; }
		else O_turn(p);
	}
	else
	{
		printf("Wrong input.\n");
		goto begin;
	}
}
void O_turn(char(*p)[3])
{
begin:int point;
	printf("O next, please input number 1~9 to continue:");
	scanf("%d", &point);
	if (point <= 9 && point >= 1 && p[2 - (point - 1) / 3][(point - 1) % 3] == '\0')
	{
		p[2 - (point - 1) / 3][(point - 1) % 3] = 'O';
		print(p);
		char c = checkwinner(p);
		if (c == 'X') { printf("Winner is X.\n"); return; }
		else if (c == 'O') { printf("Winner is O.\n"); return; }
		else if (c == 'D') { printf("Draw.\n"); return; }
		else X_turn(p);
	}
	else
	{
		printf("Wrong input.\n");
		goto begin;
	}
}
int think(char(*p)[3], char chess)
{
	void computer_turn(char(*p)[3], char chess, int put);
	char p1[3][3] = {p[0][0],p[0][1],p[0][2],p[1][0],p[1][1],p[1][2],p[2][0],p[2][1],p[2][2]};
	int i;
	int lose[9] = { 0,0,0,0,0,0,0,0,0 }, count[9] = { 0,0,0,0,0,0,0,0,0 };
	double win[9] = { 0,0,0,0,0,0,0,0,0 }, draw[9] = { 0,0,0,0,0,0,0,0,0 }, score[9] = { 0,0,0,0,0,0,0,0,0 };
	for (i = 1; i <= 9 && p[2 - (i - 1) / 3][(i - 1) % 3] == '\0'; i++)
	{
		count[i - 1] = 1;
		p1[2 - (i - 1) / 3][(i - 1) % 3] = chess;
		char c = checkwinner(p1);
		if (c == chess || c == 'D')return i;
		else
		{
			printf("************************|%d|********\n",i);
			for (int j = 1; j <= 9 && p1[2 - (j - 1) / 3][(j - 1) % 3] == '\0'; j++)
			{
				p1[2 - (j - 1) / 3][(j - 1) % 3] = 'O' + 'X' - chess;
				char c1 = checkwinner(p1);
				if (c1 == 'O' + 'X' - chess) 
				{ 
					lose[i - 1]++;
					goto end_i;
				}
				else if (c1 == 'D')draw[i - 1]++;
				else
				{
					if (think(p1, chess))
					{
						win[i - 1]++;
						//printf("************************|%f|********\n",win[i-1]);
					}
					else
					{
						lose[i - 1]++;
						goto end_i;
					}
				}
			}
		}
		end_i: continue;
	}
	int k = 0;
	for (i = 1; i <= 9 && count[i - 1] != 0 && lose[i - 1] == 0; i++)
	{
		score[i - 1] = win[i - 1] / (win[i - 1] + draw[i - 1]);
		if (score[i - 1] > score[k])k = i - 1;
	}
	//printf("************************|%f|%f|%f|%f|********\n", score[k],win[k],draw[k],win[k]+draw[k]);
	if (score[k] > 0)return (k + 1);
	else return 0;
}
void computer_turn(char(*p)[3],char chess,int put)
{
	void pve_O_turn(char(*p)[3]);
	void pve_X_turn(char(*p)[3]);
	printf("computer(%c) turn:\n", chess);
	//printf("************************|%d|********\n", put);
	p[2 - (put - 1) / 3][(put - 1) % 3] = chess;
	print(p);
	char c = checkwinner(p);
	if (c == chess) { printf("Winner is computer(%c).\n",chess); return; }
	else if (c == 'O' + 'X' - chess) { printf("Winner is you(%c).\n", 'O' + 'X' - chess); return; }
	else if (c == 'D') { printf("Draw.\n"); return; }
	if (chess == 'X')pve_O_turn(p);
	else pve_X_turn(p);
}
void pve_O_turn(char(*p)[3])
{
	int think(char(*p)[3], char chess);
begin:int point;
	printf("You(O) next, please input number 1~9 to continue:");
	scanf("%d", &point);
	if (point <= 9 && point >= 1 && p[2 - (point - 1) / 3][(point - 1) % 3] == '\0')
	{
		p[2 - (point - 1) / 3][(point - 1) % 3] = 'O';
		print(p);
		char c = checkwinner(p);
		if (c == 'X') { printf("Winner is computer(X).\n"); return; }
		else if (c == 'O') { printf("Winner is you(O).\n"); return; }
		else if (c == 'D') { printf("Draw.\n"); return; }
		else
		{
			int put = think(p, 'X');
			computer_turn(p, 'X', put);
		}
	}
	else
	{
		printf("Wrong input.\n");
		goto begin;
	}
}
void pve_X_turn(char(*p)[3])
{
	int think(char(*p)[3], char chess);
begin:int point;
	printf("You(X) next, please input number 1~9 to continue:");
	scanf("%d", &point);
	if (point <= 9 && point >= 1 && p[2 - (point - 1) / 3][(point - 1) % 3] == '\0')
	{
		p[2 - (point - 1) / 3][(point - 1) % 3] = 'X';
		print(p);
		char c = checkwinner(p);
		if (c == 'O') { printf("Winner is computer(O).\n"); return; }
		else if (c == 'X') { printf("Winner is you(X).\n"); return; }
		else if (c == 'D') { printf("Draw.\n"); return; }
		else
		{
			int put = think(p, 'O');
			computer_turn(p, 'O', put);
		}
	}
	else
	{
		printf("Wrong input.\n");
		goto begin;
	}
}
int main()
{
	start:
	char a[3][3] = { '\0','\0','\0','\0','\0','\0','\0','\0','\0' };
	printf("Guide:\npress number 1~9 as:\n|%d%3d%3d|\n|%d%3d%3d|\n|%d%3d%3d|\n", 7, 8, 9, 4, 5, 6, 1, 2, 3);
	int gamemode;
	printf("Press 1->PVP, O first;\n      2->PVE, you first;\n      3->PVE, computer first:");
	scanf("%d", &gamemode);
	switch (gamemode)
	{
	case 1:
	{
		O_turn(a);
		break;
	}
	case 2:
	{
		pve_O_turn(a);
		break;
	}
	case 3:
	{
		int put = think(a, 'O');
		computer_turn(a, 'O', put);
	}
	}
	printf("Try again?\nPress 1 to have another game, press others END:");
	int trynum;
	scanf("%d", &trynum);
	if (trynum == 1)goto start;
	system("pause");
	return 0;
}
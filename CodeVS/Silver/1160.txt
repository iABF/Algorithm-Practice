#include<iostream>
#include<cstdio>
#include<string>
#include<algorithm>
#include<cmath>
using namespace std;
int n, N, mp[105][105], ans = 1, cnt = 1, dir[4][2] = { 0,1,-1,0,0,-1,1,0 }, dircur = 0, curx, cury, lim;
int main()
{
	cin >> n;
	N = n*n;
	mp[n / 2][n / 2] = 1;
	curx = cury = n / 2;
	for (int i = 2; i <= N; i++)
	{
		if (sqrt((double)(i - 1)) == 2 * lim + 1)lim++;
		if (abs((curx + dir[dircur][1] - n / 2)) > lim || abs((cury + dir[dircur][0] - n / 2)) > lim)dircur = (dircur + 1) % 4;
		curx += dir[dircur][1];
		cury += dir[dircur][0];
		mp[cury][curx] = i;
		if (curx == cury || curx + cury == n - 1)ans += i;
	}
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n - 1; j++)cout << mp[i][j] << ' ';
		cout << mp[i][n - 1] << endl;
	}
	cout << ans << endl;
}
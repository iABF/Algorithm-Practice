#include <bits/stdc++.h>

using namespace std;

#define MAXN 100005
#define ll long long

ll n, a[MAXN];
int ans = INT_MAX;

int cal(int x) {
    if ((a[0] << x) > INT_MAX)return -1;
    int tmp = a[0] << x;
    int ret = x;
    for (int i = 1; i < n; ++i) {
        int t = a[i];
        while (t > tmp) {
            t >>= 1;
            ret++;
        }
    }
    return ret;
}

int main() {
    cin >> n;
    for (int i = 0; i < n; ++i)cin >> a[i];
    for (int k = 0; k < 32; ++k) {
        int t = cal(k);
        if (t == -1)break;
        ans = min(ans, t);
    }
    cout << ans << endl;
}

// 思路：暴力即可，第一个数字至多乘32次2，那么对每个乘好的第一个数字分别计算后n-1个数字需要除多少次，时间复杂度O(n(log(INT_MAX/n))。
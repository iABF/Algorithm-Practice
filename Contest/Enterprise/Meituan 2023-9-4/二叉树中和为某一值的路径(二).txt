/**
 * struct TreeNode {
 *	int val;
 *	struct TreeNode *left;
 *	struct TreeNode *right;
 *	TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 * };
 */
class Solution {
public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     *
     * @param root TreeNode类
     * @param target int整型
     * @return int整型vector<vector<>>
     */
    void dfs(vector<int>x, TreeNode* cur, int sum, int target, vector<vector<int> >&k){
        if(!cur->left&&!cur->right){
            if(sum==target){
                vector<int>tmp = x;
                k.push_back(tmp);
            }
            return;
        }
        if(cur->left){
            x.push_back(cur->left->val);
            dfs(x,cur->left,sum+cur->left->val, target, k);
            x.erase(x.end()-1);
        }
        if(cur->right){
            x.push_back(cur->right->val);
            dfs(x,cur->right,sum+cur->right->val, target, k);
            x.erase(x.end()-1);
        }
    }
    vector<vector<int> > FindPath(TreeNode* root, int target) {
        // write code here
        vector<vector<int>>k;
        if(target==0)return k;
        vector<int>p;
        p.push_back(root->val);
        dfs(p, root, root->val, target, k);
        return k;
    }
};
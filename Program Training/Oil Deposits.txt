#include<iostream>
#include<queue>
#include<string>
#include<cstdio>
using namespace std;
int n, m;
char grid[105][105];
bool vis[105][105];
int dir[8][2] = { {1,1},{1,0},{1,-1},{0,-1},{-1,-1},{-1,0},{-1,1},{0,1} };
string s;
int ans = 0;
bool check(int x, int y)
{
	if (x < 1)return false;
	if (x > m)return false;
	if (y < 1)return false;
	if (y > n)return false;
	if (vis[x][y])return false;
	if (grid[x][y] == '*')return false;
	return true;
}
void dfs(int x, int y)
{
	vis[x][y] = true;
	for (int i = 0; i < 8; i++)
	{
		int nx = x + dir[i][0];
		int ny = y + dir[i][1];
		if (check(nx, ny))
		{
			dfs(nx, ny);
		}
	}
}
int main()
{
	while (scanf("%d%d", &m, &n), m)
	{
		ans = 0;
		for (int i = 1; i <= m; i++)
		{
			cin >> s;
			for (int j = 0; j < s.length(); j++)grid[i][j + 1] = s[j], vis[i][j + 1] = false;
		}
		for (int i = 1; i <= m; i++)
		{
			for (int j = 1; j <= n; j++)
			{
				if (grid[i][j] == '*')continue;
				if (!vis[i][j])
				{
					ans++;
					dfs(i, j);
				}
			}
		}
		cout << ans << endl;£¬
	}
}
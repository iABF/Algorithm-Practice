#include<iostream>
#include<queue>
#include<algorithm>
#include<string>
#include<vector>
#include<cstring>
#include<cstdio>
using namespace std;
int T, n, s = 0, t, D[22], W[22], mp[373][373], minn;
bool f[22][7], vis[373];
int dfs(int st, int val)
{
	if (st == t)return val;
	for (int i = 0; i <= t; i++)
	{
		if (mp[st][i] > 0 && !vis[i])
		{
			vis[i] = true;
			int dd = dfs(i, min(val, mp[st][i]));
			if (dd > 0)
			{
				mp[st][i] -= dd;
				mp[i][st] += dd;
				return dd;
			}
		}
	}
	return 0;
}
int maxflow()
{
	int fl = 0;
	while (true)
	{
		memset(vis, false, sizeof(vis));
		vis[s] = true;
		int f = dfs(s, 10000);
		if (f == 0)return fl;
		fl += f;
	}
}
int main()
{
	cin >> T;
	while (T--)
	{
		memset(mp, 0, sizeof(mp));
		cin >> n;
		int maxx = 0, sum = 0;
		for (int i = 1; i <= n; i++)
		{
			for (int j = 0; j < 7; j++)cin >> f[i][j];;
			cin >> D[i] >> W[i];
			maxx = max(maxx, W[i]);
			mp[s][i] = D[i];
			sum += D[i];
			for (int j = 0; j < W[i]; j++)
				for (int k = 0; k < 7; k++)
					if (f[i][k])mp[i][1 + n + j * 7 + k] = 1;
		}
		t = 1 + n + maxx * 7;
		for (int i = 0; i < maxx * 7; i++)mp[i + 1 + n][t] = 1;
		if (sum == maxflow())cout << "Yes\n";
		else cout << "No\n";
	}
}
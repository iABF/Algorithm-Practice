/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool is_left(TreeNode* tmp){
        int cnt = -1;
        TreeNode *x = tmp;
        while(x->left)x = x->left, cnt++;
        x = tmp->right;
        while(x->left)x=x->left, cnt--;
        return cnt == 1;
    }
    bool is_leaf(TreeNode* tmp){
        if(tmp->left)return false;
        if(tmp->right)return false;
        return true;
    }
    int countNodes(TreeNode* root) {
        int ans = 1;
        TreeNode* tmp = root;
        if(tmp == nullptr)return 0;
        while(!is_leaf(tmp)){
            if(!tmp->right)tmp = tmp->left, ans *= 2;
            else if (!tmp->left)tmp = tmp->right, ans = ans * 2 + 1;
            else if(is_left(tmp))tmp = tmp->left, ans *= 2;
            else tmp = tmp->right, ans = ans * 2 + 1;
        }
        return ans;
    }
};
#include <bits/stdc++.h>

#define INF 0x7f7f7f7f
#define MAXN 105
#define MOD 1000000
#define _PI 3.14159265358979323846
#define ll long long
#define VPRINT(a, n) for(int i = 0; i < n - 1; ++i) cout << a[i] <<' '; cout << a[n-1] << endl
#define PRINT(a) cout << a << endl
using namespace std;

struct Node {
    vector<int> des;
    int depth = 0;
    Node *father = nullptr;
} p[MAXN];

int d[MAXN] = {0, 1};
int n, x, y, max_d = 0, max_w = 0;

int main() {
    cin >> n;
    for (int i = 1; i < n; ++i) {
        cin >> x >> y;
        p[x].des.push_back(y);
        p[y].des.push_back(x);
    }
    cin >> x >> y;
    queue<Node *> q;
    q.push(p + 1);
    p[1].depth = 1;
    while (!q.empty()) {
        Node *m = q.front();
        q.pop();
        for (auto i: m->des) {
            if (p[i].depth)continue;
            p[i].father = m;
            p[i].depth = m->depth + 1;
            d[p[i].depth]++;
            max_d = max(max_d, p[i].depth);
            max_w = max(max_w, d[p[i].depth]);
            q.push(p + i);
        }
    }
    cout << max_d << endl << max_w << endl;
    int ans = 0;
    Node *X = p + x;
    Node *Y = p + y;
    while (X->depth > Y->depth)X = X->father, ans += 2;
    while (X->depth < Y->depth)Y = Y->father, ans++;
    while (X != Y)X = X->father, Y = Y->father, ans += 3;
    cout << ans << endl;
}

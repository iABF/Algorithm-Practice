#include<stdio.h>
#include<stdlib.h>
#include<string.h>
long long int a[500010];
long long int t[500010];
int n;
long long int ans;
void merge(int start, int end, int mid)
{
	int count = 0;
	int u = start;
	int e = mid + 1;
	while (e <= end && u <= mid)
	{
		if (a[u] <= a[e])t[count++] = a[u++];
		else ans += mid + 1 - u, t[count++] = a[e++];
	}
	while (u <= mid)t[count++] = a[u++];
	while (e <= end)t[count++] = a[e++];
	for (int i = 0; i < count; i++)a[start + i] = t[i];
}
void mergesort(int start, int end)
{
	if (start < end)
	{
		int mid = (start + end) / 2;
		mergesort(start, mid);
		mergesort(mid + 1, end);
		merge(start, end, mid);
	}
}
int main()
{
	while (scanf("%d", &n), n)
	{
		ans = 0;
		for (int i = 0; i < n; i++)scanf("%lld", &a[i]);
		mergesort(0, n - 1);
		printf("%lld\n", ans);
	}
	return 0;
}
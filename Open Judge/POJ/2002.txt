#include<stdio.h>
#include<string.h>
int n;
struct HUS
{
	short x;
	short y;
	bool occ;
}hush[12000][100];
int x[1010], y[1010];
int cx, cy, dx, dy, key, r, ans;
bool find(int x, int y)
{
	key = (x*x + y*y) % 10007;
	if (key < 0)key += 10007;
	for (r = 0;; r++)
	{
		if (!hush[key][r].occ)return false;
		if (x == hush[key][r].x&&y == hush[key][r].y)return true;
	}
	return false;
}
bool check1(int i,int j)
{
	cx = x[i] + y[i] - y[j];
	cy = y[i] + x[j] - x[i];
	dx = x[j] + y[i] - y[j];
	dy = y[j] + x[j] - x[i];
	if (find(cx, cy) && find(dx, dy))return true;
	return false;
}
bool check2(int i, int j)
{
	cx = x[i] - y[i] + y[j];
	cy = y[i] - x[j] + x[i];
	dx = x[j] - y[i] + y[j];
	dy = y[j] - x[j] + x[i];
	if (find(cx, cy) && find(dx, dy))return true;
	return false;
}
int main()
{
	while (scanf("%d", &n), n)
	{
		for (int i = 0; i < 12000; i++)for (int j = 0; j < 100; j++)hush[i][j].occ = false;
		for (int i = 0; i < n; i++)
		{
			scanf("%d%d", &x[i], &y[i]);
			key = (x[i] * x[i] + y[i] * y[i]) % 10007;
			if (key < 0)key += 10007;
			for (r = 0; hush[key][r].occ; r++);
			hush[key][r].occ = true;
			hush[key][r].x = x[i];
			hush[key][r].y = y[i];
		}
		ans = 0;
		for (int i = 0; i < n - 1; i++)for (int j = i + 1; j < n; j++)ans += check1(i, j) + check2(i, j);
		printf("%d\n", ans/4);
	}
	return 0;
}
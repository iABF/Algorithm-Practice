#include<cstdio>
#include<cstring>
using namespace std;
int n, k;
long long p;
int temp;
int a[70];
int na[70];
int mtx[70][70];
int nmtx[70][70];
void mtxcal()
{
	for (int i = 0; i < n; i++)for (int j = 0; j < n; j++)
	{
		nmtx[i][j] = 0;
		for (int k = 0; k < n; k++)nmtx[i][j] += mtx[i][k] * mtx[k][j];
		if (nmtx[i][j] & 1)nmtx[i][j] = 1;
		else nmtx[i][j] = 0;
	}
	memcpy(mtx, nmtx, sizeof(mtx));
}
void mtxop()
{
	for (int i = 0; i < n; i++)
	{
		na[i] = 0;
		for (int j = 0; j < n; j++)na[i] += mtx[i][j] * a[j];
		if (na[i] & 1)na[i] = 1;
		else na[i] = 0;
	}
	memcpy(a, na, sizeof(a));
}
int main()
{
	int T;
	scanf("%d", &T);
	while (T--)
	{
		scanf("%d %d %lld", &n, &k, &p);
		for (int i = 0; i < n; i++)
		{
			scanf("%d", &temp);
			if (temp & 1)a[i] = 1;
			else a[i] = 0;
		}
		memset(mtx, 0, sizeof(mtx));
		for (int i = 0; i < n; i++)
		{
			if (i < k)for (int j = 0; j <= i + k; j++)mtx[i][j] = 1;
			else if (i >= n - k)for (int j = i - k; j < n; j++)mtx[i][j] = 1;
			else for (int j = i - k; j <= i + k; j++)mtx[i][j] = 1;
		}
		while (p)
		{
			if (p % 2 == 0)
			{
				mtxcal();
				p /= 2;
			}
			mtxop();
			p -= 1;
		}
		int ans = 0;
		for (int i = 0; i < n; i++)if (a[i])ans++;
		printf("%d\n", ans);
	}
}